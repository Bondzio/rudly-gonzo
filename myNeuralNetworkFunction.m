function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 22:17:58.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = -0.923630364854819;
x1_step1.gain = 0.410336934951591;
x1_step1.ymin = -1;

% Layer 1
b1 = [-14.275042288582955763;10.740816706604686459;-7.7837451689532963783;4.8055125474964821564;-1.6688466924422216131;1.4463548276175657303;-4.766915039610945648;-8.1426657253580980722;-10.818034475291286256;13.873662072722817484];
IW1_1 = [13.729754110964911717;-14.134864887128017585;13.995756086201691204;-13.956768899692800545;13.965853193588039005;14.009020309350479039;-13.963504998361456089;-13.764607103861356663;-14.035002581633420959;14.140183411542551539];

% Layer 2
b2 = -0.35316805462030820273;
LW2_1 = [0.10074108310330261162 -0.15942251533527418417 0.13599447442104217743 0.12573759121899244495 0.093128358641556815978 -0.044424802051657316659 0.059749156287995021375 -0.14850558241598860176 0.15598233752250179052 0.60825436108020647374];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.323123950520061;
y1_step1.xoffset = 0.000275602421621117;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
